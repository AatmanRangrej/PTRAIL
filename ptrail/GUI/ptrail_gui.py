#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.1
#  in conjunction with Tcl version 8.6
#    Jan 16, 2022 06:17:20 PM NST  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import gui_support


class MainCanvas:
    def __init__(self, top=None):
        """
            This class configures and populates the toplevel window.
           top is the toplevel containing window.
        """
        # MapFrame variables
        self.MapFrame = None

        # BottomFrame variables
        self.ExportButton = None
        self.CurrentFileLabel = None
        self.BottomFrame = None

        # RightFrame variables
        self.StatisticsText = None
        self.RightFrame = None
        self.LeftFrame = None
        self.CommandLabel = None

        # Set the style of the window.
        self.style = None
        self.set_style()
        top.geometry("1188x879+0+32")
        top.minsize(1, 1)
        top.maxsize(3825, 1050)
        top.resizable(1, 1)
        top.title("PTRAIL")

        # Draw the canvas.
        self.top = top
        self.create_left_frame()
        self.create_right_frame()
        self.create_bottom_frame()
        self.create_map_frame()

    def set_style(self):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')

        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=[('selected', _compcolor), ('active', _ana2color)])

    def create_left_frame(self):
        # Create the frame.
        self.LeftFrame = tk.Frame(self.top)
        self.LeftFrame.place(relx=0.008, rely=0.011, relheight=0.692
                             , relwidth=0.208)
        self.LeftFrame.configure(relief='groove')
        self.LeftFrame.configure(borderwidth="2")
        self.LeftFrame.configure(relief="groove")
        self.LeftFrame.configure(cursor="fleur")

        # Add the label saying "Command Palette".
        self.CommandLabel = tk.Label(self.LeftFrame)
        self.CommandLabel.place(relx=0.04, rely=0.016, height=35, width=230)
        self.CommandLabel.configure(background="#7d8899")
        self.CommandLabel.configure(compound='left')
        self.CommandLabel.configure(cursor="fleur")
        self.CommandLabel.configure(font="-family {newspaper} -size 16")
        self.CommandLabel.configure(text='''Command Palette''')
        self.CommandLabel.pack(fill=X)

    def create_right_frame(self):
        # Create the RightFrame.
        self.RightFrame = tk.Frame(self.top)
        self.RightFrame.place(relx=0.714, rely=0.011, relheight=0.98, relwidth=0.285)
        self.RightFrame.configure(relief='groove')
        self.RightFrame.configure(borderwidth="2")
        self.RightFrame.configure(relief="groove")

        # Add the label saying "Statistics".
        self.StatisticsText = tk.Label(self.RightFrame)
        self.StatisticsText.place(relx=0.033, rely=0.012, height=36, width=319)
        self.StatisticsText.configure(activebackground="#f9f9f9")
        self.StatisticsText.configure(background="#7d8899")
        self.StatisticsText.configure(compound='left')
        self.StatisticsText.configure(font="-family {newspaper} -size 16")
        self.StatisticsText.configure(text='''Statistics''')
        self.StatisticsText.pack(fill=X)

    def create_bottom_frame(self):
        # Create the BottomFrame.
        self.BottomFrame = tk.Frame(self.top)
        self.BottomFrame.place(relx=0.008, rely=0.709, relheight=0.282
                               , relwidth=0.703)
        self.BottomFrame.configure(relief='groove')
        self.BottomFrame.configure(borderwidth="2")
        self.BottomFrame.configure(relief="groove")

        # Add the label saying "Current File".
        self.CurrentFileLabel = tk.Label(self.BottomFrame)
        self.CurrentFileLabel.place(relx=0.012, rely=0.04, height=35, width=681)
        self.CurrentFileLabel.configure(anchor='w')
        self.CurrentFileLabel.configure(compound='left')
        self.CurrentFileLabel.configure(font="-family {newspaper} -size 14")
        self.CurrentFileLabel.configure(text='''Current File:''')

        # Create the Export button.
        self.ExportButton = tk.Button(self.BottomFrame)
        self.ExportButton.place(relx=0.84, rely=0.04, height=37, width=122)
        self.ExportButton.configure(background="#7d8899")
        self.ExportButton.configure(borderwidth="2")
        self.ExportButton.configure(compound='left')
        self.ExportButton.configure(font="-family {gothic} -size 16")
        self.ExportButton.configure(text='''Export''')

    def create_map_frame(self):
        # Create the frame that will hold the map.
        self.MapFrame = tk.Frame(self.top)
        self.MapFrame.place(relx=0.218, rely=0.011, relheight=0.692, relwidth=0.493)
        self.MapFrame.configure(relief='groove')
        self.MapFrame.configure(borderwidth="2")
        self.MapFrame.configure(relief="groove")


def start_up():
    gui_support.main()


if __name__ == '__main__':
    gui_support.main()
